IP - 3.109.155.108
centos
centos123
================================================
Namespace
------------------------------------

 1003  kubectl get ns
 1004  kubectl describe nd default
 1005* kubectl describe ns defaul
 1006  kubectl
 1007  kubectl api-resources
 1008  kubectl api-resources | grep quota
 1009  clear
 1010  kubectl get ns
 1011  kubectl get pods -n=kube-system
 1012  clear
 1013  kubectl create ns rajesh
 1014  kubectl get ns
 1015  history
 1016  clear
 1017  kubectl create deployment sabeesh --image=busybox -n=rajesh
 1018  kubectl get ppds
 1019  kubectl get pods
 1020  clear
 1021  kubectl get pods -n=rajesh
 1022  kubectl edit ns rajesh
 1023  kubectl delete ns rajesh
 1024  kubectl get ns

=============================================================
Assignment:
Create a namespace with your name and assigne one dummy resourcesquota to it and deploy a app of mysql in your namespace.
============================================================
https://www.devopsschool.com/blog/understanding-authentication-authorization-in-kubernetes/
----------------------------------------------------------
Authentication and Authorization in Kubernetes?
---------------------------------------------------------------
Authentication - How to connect to a SYSTEM?
- Certificate - HUMAN
- Token - Node for Bootstrap
- OpenID
- Web Hook
==========================================
Create a user and get cert.
----------------------------------

HUMAN				CA BODY
----------------------------------------------
Rajesh				Master

PVT ---> CSR ------------------> CRT
	<-----------------------
PVT + CRT
---------
AUTH of API 


Authorization
-------------------------------
Node
ABAC
RBAC [ FOCUS ]
Webhook
===========================================
Role Based access Control
---------------------------------------
WHAT RESOURCES|API GROUP -----WHAT ACCESS ------ WHAT USER|WHAT GROUP
------------------------------------------		employee
		ROLE	 
			------------ROLE BINDING-----------------> user



USER
	HUMAN
	serviceaccount

When you assign USER|SA|GROUP Access to Namespace === Use Role
When you assign USER|SA|GROUP Access to Entire Clustor === Use ClustorsRole

When you add ROLE TO USER|SA|GROUP == RoleBinding
When you add ClustorsRole TO USER|SA|GROUP == ClustorRoleBinding

-----------------
role
clustorrole

rolebinding
clustorrolebinding

serviceaccount


kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: deployment-manager-binding
  namespace: office
subjects:
- kind: User
  name: employee
  apiGroup: ""
roleRef:
  kind: Role
  name: deployment-manager
  apiGroup: ""


https://www.devopsschool.com/blog/understanding-authentication-authorization-in-kubernetes/

---------------
https://www.devopsschool.com/blog/persistentvolume-persistentvolumeclaim-volumes-using-hostpath/
---------------

https://www.devopsschool.com/blog/kubernetes-persistentvolume-and-persistentvolumeclaim-using-nfs-volume-types/
https://www.devopsschool.com/blog/setup-nfs-server-and-use-inside-a-kubernetes-pods-in-rhel-centos7/


